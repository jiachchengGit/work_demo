<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
						http://www.springframework.org/schema/beans
						 http://www.springframework.org/schema/beans/spring-beans.xsd  
						http://www.springframework.org/schema/tx
						 http://www.springframework.org/schema/tx/spring-tx.xsd  
						http://www.springframework.org/schema/aop
						 http://www.springframework.org/schema/aop/spring-aop.xsd  
						http://www.springframework.org/schema/context
						 http://www.springframework.org/schema/context/spring-context.xsd">


<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
<!-- 		<property name="driverClassName" value="${jdbc.driver}"/> -->
<!-- 		<property name="url" value="${jdbc.url}"/> -->
<!-- 		<property name="username" value="${jdbc.username}"/> -->
<!-- 		<property name="password" value="${jdbc.password}"/> -->
<!-- 		<property name="initialSize" value="10"/> -->
<!-- 		<property name="maxActive" value="40"/> -->
<!-- 		<property name="testOnBorrow" value="false"/> -->
<!-- 		<property name="testOnReturn" value="false"/> -->
<!-- 		<property name="testWhileIdle" value="true"/> -->
<!-- 		<property name="validationQuery" value="SELECT 1 FROM DUAL"/> -->
<!-- 		<property name="timeBetweenEvictionRunsMillis" value="10000"/> -->
<!-- 		<property name="numTestsPerEvictionRun" value="3"/> -->
<!-- 		<property name="minEvictableIdleTimeMillis" value="300000"/> -->
<!-- 		<property name="removeAbandoned" value="true"/> -->
<!-- 		<property name="removeAbandonedTimeout" value="120"/> -->
<!-- 		<property name="logAbandoned" value="true"/>  -->
<!-- 	</bean> -->
	
	<bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<constructor-arg name="url" value="{jdbc.url}"/>
		<constructor-arg name="conProps">
			<map>
				<entry key="driverClassName" value="${jdbc.driver}" />
		        <entry key="url" value="${jdbc.url}"/>
				<entry key="username" value="${jdbc.username}"/>
				<entry key="password" value="${jdbc.password}"/>
			</map>
		</constructor-arg>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 
		最佳实践：事务注解@Transactional 使用在实现类的方法上，因为接口上的注解是不能被继承的，如果要用在接口上，必须配置基于接口的代理	-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>